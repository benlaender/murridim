/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package gradle_sw4;

import java.io.File;
import java.io.IOException;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.common.PDRectangle;
import org.apache.pdfbox.pdmodel.font.PDType1Font;
import org.apache.pdfbox.pdmodel.font.Standard14Fonts;

import com.indvd00m.ascii.render.Render;
import com.indvd00m.ascii.render.api.ICanvas;
import com.indvd00m.ascii.render.api.IContextBuilder;
import com.indvd00m.ascii.render.api.IRender;
import com.indvd00m.ascii.render.elements.PseudoText;

import org.fusesource.jansi.Ansi;
import org.fusesource.jansi.AnsiConsole;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) throws IOException {
        System.out.println(new App().getGreeting());
        AnsiConsole.systemInstall();

        IRender render = new Render();
		IContextBuilder builder = render.newBuilder();
		builder.width(120).height(20);
		builder.element(new PseudoText("DevOps SW4"));
		ICanvas canvas = render.render(builder.build());
		// Hier wird Jansi verwendet, um den String zu formatieren
        String s = Ansi.ansi().fg(Ansi.Color.BLUE).a(canvas.getText()).reset().toString();
		System.out.println(s);

        // PDF Box
        PDDocument helloPdf = new PDDocument();
        PDPage page = new PDPage(PDRectangle.A4);
        helloPdf.addPage(page);
        PDPageContentStream contentStream = new PDPageContentStream(helloPdf, page);
        contentStream.beginText();
        contentStream.setFont(new PDType1Font(Standard14Fonts.FontName.HELVETICA), 36);
        contentStream.newLineAtOffset(5, 400);
        contentStream.showText("Hello DevOps!!!");
        contentStream.endText();
        contentStream.close();
        helloPdf.save(new File("simple.pdf"));
        helloPdf.close();


        // Verwenden Sie die Ansi-Klasse, um einen String mit ANSI-Codes zu erstellen
        String redText = Ansi.ansi().fg(Ansi.Color.RED).a("Roter Text").reset().toString();
        String greenText = Ansi.ansi().fg(Ansi.Color.GREEN).a("Gruener Text").reset().toString();

        // Ausgabe des formatierten Strings in der Konsole
        System.out.println(redText);
        System.out.println(greenText);
        


        // Deinitialisiere Jansi
        AnsiConsole.systemUninstall();

    }

    


}
